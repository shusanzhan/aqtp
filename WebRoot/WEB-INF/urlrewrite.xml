<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE urlrewrite PUBLIC "-//tuckey.org//DTD UrlRewrite 3.2//EN"
        "http://tuckey.org/res/dtds/urlrewrite3.2.dtd">

<!--

    Configuration file for UrlRewriteFilter
    http://tuckey.org/urlrewrite/
    Struts2 demo  urlRewrite,from springside3.1
<urlrewrite>
	<rule>
		<from>^/common/users.htm$</from>
		<to type="forward">/common/user.action</to>
	</rule>
	<rule>
		<from>^/common/user/([0-9]+)\.htm$</from>
		<to type="forward">/common/user!input.action?id=$1</to>
	</rule>
</urlrewrite>
-->
<urlrewrite>
	
	
    <rule>
		<note>
			如果url中包含".",则不对其进行重写,即对包含.*后缀的url不进行重写,以此来避免css、img等文件的正常加载
			.表示任意元素，过于广泛
			[]用来指定匹配的元素
			|符号用来进行“或”t(a|e|i|o|oo)n,则匹配的有tan,ten,tin,toon
			*,+,?,{n}，{n,m}分别表示0或多次，+一次或者多次，？零此或者1次，{n}恰好n次，{n，m}n此到m次
			^否符号，表示不匹配
			空白、空格符号：\s \s*表示0次或多次；\s+表示一次或多次；
			()圆括号：圆括号用于分组
			
		</note>
            <from>/([.\u4e00-\u9fa5_a-z_A-Z0-9/\-]+)[.]([a-z_A-Z0-9]+)</from>
            <to last="true" type="forward">/$1.$2</to>
            
    </rule>
   
    <rule>
    <note>
    	将/controller/action 重写为struts定义的url
    </note>
            <from>/([a-z_A-Z0-9]+)/([a-z_A-Z0-9]+)([/]{0,1})</from>
            <to last="true" type="forward">/$1!$2.action</to>
    </rule>
    <rule>
    <note>
    	将/controller 重写为struts定义的url
    </note>
            <from>/([a-z_A-Z0-9]+)</from>
            <to last="true" type="forward">/$1.action</to>
    </rule>
    <rule>
		<note>
			针对首页的请求不过滤
		</note>
		<from>/</from>
		<to last="true" type="forward">/</to>
	</rule>
    <!--
 <rule>
    <note>
    	将/controller/action/id 重写为struts定义的url
    </note>
            <from>/([a-z_A-Z0-9]+)/([a-z_A-Z0-9]+)/([a-z_A-Z0-9]+)</from>
            <to last="true" type="forward">/$1/!$2.action?$1.id=$3</to>
    </rule>
    INSTALLATION

        in your web.xml add...

        <filter>
            <filter-name>UrlRewriteFilter</filter-name>
            <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
            <init-param>
                <param-name>logLevel</param-name>
                <param-value>DEBUG</param-value>
            </init-param>
        </filter>
        <filter-mapping>
            <filter-name>UrlRewriteFilter</filter-name>
            <url-pattern>/*</url-pattern>
        </filter-mapping>

     EXAMPLES

     Redirect one url
        <rule>
            <from>/some/old/page.html</from>
            <to type="redirect">/very/new/page.html</to>
        </rule>

    Redirect a directory
        <rule>
            <from>/some/olddir/(.*)</from>
            <to type="redirect">/very/newdir/$1</to>
        </rule>

    Clean a url
        <rule>
            <from>/products/([0-9]+)</from>
            <to>/products/index.jsp?product_id=$1</to>
        </rule>
    eg, /products/1234 will be passed on to /products/index.jsp?product_id=1234 without the user noticing.

    Browser detection
        <rule>
            <condition name="user-agent">Mozilla/[1-4]</condition>
            <from>/some/page.html</from>
            <to>/some/page-for-old-browsers.html</to>
        </rule>
    eg, will pass the request for /some/page.html on to /some/page-for-old-browsers.html only for older
    browsers whose user agent srtings match Mozilla/1, Mozilla/2, Mozilla/3 or Mozilla/4.

    Centralised browser detection
        <rule>
            <condition name="user-agent">Mozilla/[1-4]</condition>
            <set type="request" name="browser">moz</set>
        </rule>
    eg, all requests will be checked against the condition and if matched
    request.setAttribute("browser", "moz") will be called.

    -->

</urlrewrite>

